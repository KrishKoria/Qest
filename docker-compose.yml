version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: fitness_studio_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: fitness_studio
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fitness_studio_network

  # Redis for caching and memory
  redis:
    image: redis:7.2-alpine
    container_name: fitness_studio_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - fitness_studio_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fitness_studio_backend
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/fitness_studio?authSource=admin
      - DATABASE_NAME=fitness_studio
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EXTERNAL_API_BASE_URL=${EXTERNAL_API_BASE_URL:-https://api.example.com}
      - EXTERNAL_API_KEY=${EXTERNAL_API_KEY:-dummy_key}
      - DEBUG=true
      - LOG_LEVEL=INFO
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_change_in_production}
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
    networks:
      - fitness_studio_network

  # Frontend (React) - Optional for development
  frontend:
    image: node:18-alpine
    container_name: fitness_studio_frontend
    restart: unless-stopped
    working_dir: /app
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm start"
    depends_on:
      - backend
    networks:
      - fitness_studio_network
    profiles:
      - frontend

  # MongoDB Express for database management (optional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: fitness_studio_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - fitness_studio_network
    profiles:
      - tools

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  fitness_studio_network:
    driver: bridge
